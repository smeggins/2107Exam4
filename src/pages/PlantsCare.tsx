import type { NextPage } from 'next';
import Head from 'next/head';
import styles from '@styles/PlantFinder.module.sass';
import stylesSearch from '@styles/SearchBar.module.sass';
import searchIcon from '@public/searchIcon.png';
import Header from './components/Header/Header';
import Footer from './components/Footer/Footer';
import PlantComponent from './components/Plant/Plant';
import { ToolController } from '@/backEnd/dataAccessLayer/actions/tool';
import { Tool } from '@/shared/interfaces/Tool';
import { useState } from 'react';
import {SearchTools} from '@/shared/actions/search';
import Image from 'next/image';

const PlantsCare: NextPage = (props: {tools: [Tool?]}) => {
    // the tools you retrieved
    const [tools, setTools] = useState(props.tools);
    // the value for used to search for tools
    const [searchVal, setSearchVal] = useState("");

    // task to search for tools
    async function search(event) {
        // result of our search for tools
        const result:[ToolController?] = await SearchTools(event, searchVal) as [ToolController?];

        // assigns tools depending on result
        if (result == null) {
            setTools(props.tools);
        }
        else {
            setTools(result);
        }
    }

    return (
        <div className={styles.container}>
            <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
            </Head>

            <Header></Header>
            <main className={styles.main}>
                <div className={stylesSearch.SearchBarContainer}>
                    <div>
                        <div className={stylesSearch.SearchBarIcon}><Image src={searchIcon} alt="me" layout="fill" objectFit="contain" /></div>
                        <input className={stylesSearch.SearchBar} onChange = {e => { setSearchVal(e.currentTarget.value);}} placeholder='search' type="text" name='search' onKeyDown={search} />
                    </div>
                </div>
                <h1>Plants Care</h1>
                <div className={styles.PlantFinderResultsContainer}>
                {
                    tools.map(
                    (item) => {
                        return (
                            <div className={styles.PlantFinderResult} key={ String(item.name) }>
                                <PlantComponent name={item.name} description={item.description} imagePath={`/tools/${item.imagePath}`}></PlantComponent>
                            </div>
                        );
                    }
                    )
                }
                </div>
            </main>
            <Footer></Footer>
        </div>
    );
};

export async function getServerSideProps() {
    // get all tools
    const queryResult = await ToolController.getTools();
    // parse the results into an array of tools and return them
    const tools = JSON.parse(JSON.stringify(queryResult)) as [ToolController];
    
    return {
        props: {
        tools
        }
    };
}

export default PlantsCare;
