import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '@styles/PlantFinder.module.sass'
import Header from './components/Header/Header'
import Footer from './components/Footer/Footer'
import stylesSearch from '@styles/SearchBar.module.sass';
import TobysButton from './components/TobysButton/TobysButton'
import PlantWithEdit from './components/PlantWithEdit/PlantWithEdit'
import { PlantController } from '@/backEnd/dataAccessLayer/actions/plant'
import { useState } from 'react'
import { SearchPlants } from '@/shared/actions/search'
import searchIcon from '@public/searchIcon.png'


interface PlantProps {
    plants: [PlantController?]
}

const MyPlants: NextPage = (props: PlantProps) => {
    const [plants, setPlants] = useState(props.plants)
    const [searchVal, setSearchVal] = useState("")

    async function search(event) {
        const result:[PlantController?] = await SearchPlants(event, searchVal) as [PlantController?]

        if (result == null) {
            setPlants(props.plants)
        }
        else {
            setPlants(result)
        }
    }

    return (
    <div className={styles.container}>
        <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        </Head>

        <Header></Header>
        <main className={styles.main}>
        <div className={stylesSearch.SearchBarContainer}>
            <div>
                <div className={stylesSearch.SearchBarIcon}><Image src={searchIcon} alt="me" layout="fill" objectFit="contain" /></div>
                <input className={stylesSearch.SearchBar} onChange = {e => { setSearchVal(e.currentTarget.value)}} placeholder='search' type="text" name='search' onKeyDown={search} />
            </div>
        </div>

        
        <div className={styles.MyPlantsHeaderContainer}>
            <div className={styles.MyPlantsHeaderTitleContainer}>
                <h1>My Plants</h1>    
            </div>
            <div className={styles.MyPlantsButtonContainer}>
                <TobysButton name="Add Plants" path="AddPlants"></TobysButton>
            </div>
        </div>
        
        <div className={styles.PlantFinderResultsContainer}>
        {
        plants.map(
            (item) => {
                return (
                    <div className={styles.PlantFinderResult} key={ String(item._id) }>
                        <PlantWithEdit pController={item}></PlantWithEdit>
                    </div>
                );
            }
        )
        }
        </div>

        </main>
        <Footer></Footer>
    </div>
    )
}

// get server side props using id value passed by link in list card
export async function getServerSideProps() {
    // get all lists associated with the given id
    const queryResult = await PlantController.getPlants();
    // parse the results into an array of SSLists
    const plants = JSON.parse(JSON.stringify(queryResult)) as [PlantController];
    return {
        props: {
        plants
        }
    };
}

export default MyPlants


